// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Skin {
  id              String         @id @default(uuid()) @db.VarChar(36)
  asset_id        String         @db.VarChar(255)
  skin_image      String         @db.VarChar(255)
  skin_name       String         @db.VarChar(255)
  skin_category   String         @db.VarChar(255)
  skin_weapon     String         @db.VarChar(255)
  skin_price      String         @db.VarChar(255)
  skin_float      String         @db.VarChar(255)
  skin_color      String         @db.VarChar(255)
  skin_link_game  String         @db.VarChar(255)
  skin_link_steam String         @db.VarChar(255)
  seller_name     String         @db.VarChar(255)
  seller_id       String         @db.VarChar(255)
  buyer_name      String?        @db.VarChar(255)
  buyer_id        String?        @db.VarChar(255)
  status          String         @db.VarChar(255)
  status_float    String         @db.VarChar(255)
  sale_type       String?        @db.VarChar(255)
  sellerAt        DateTime?
  createdAt       DateTime       @default(now())
  updatedAt       DateTime?
  deletedAt       DateTime?
  Notification    Notification[]
  skinToCart      SkinToCart[]
  Transaction     Transaction[]
}

model SkinToCart {
  id     String @id @default(uuid()) @db.VarChar(36)
  skinId String @db.VarChar(255)
  cartId String @db.VarChar(255)

  skin Skin @relation(fields: [skinId], references: [id])
  cart Cart @relation(fields: [cartId], references: [id])
}

model Cart {
  id         String       @id @default(uuid()) @db.VarChar(36)
  buyer_id   String       @db.VarChar(255)
  price      Float        @default(0)
  createdAt  DateTime     @default(now())
  updatedAt  DateTime?
  deletedAt  DateTime?
  skinId     String?      @db.VarChar(36)
  SkinToCart SkinToCart[]
  Perfil     Perfil[]
}

model Wallet {
  id         String    @id @default(uuid()) @db.VarChar(36)
  owner_id   String    @unique @db.VarChar(255)
  owner_name String    @db.VarChar(255)
  value      Float     @default(0)
  createdAt  DateTime  @default(now())
  updatedAt  DateTime?
  deletedAt  DateTime?
}

model Notification {
  id          String    @id @default(uuid()) @db.VarChar(36)
  owner_id    String    @db.VarChar(255)
  description String?   @db.VarChar(255)
  new         Boolean?  @default(true)
  createdAt   DateTime  @default(now())
  updatedAt   DateTime?
  deletedAt   DateTime?
  skin        Skin?     @relation(fields: [skin_id], references: [id])
  skin_id     String?   @db.VarChar(36)
}

model Configuration {
  id                 String    @id @default(uuid()) @db.VarChar(36)
  owner_id           String    @db.VarChar(255)
  owner_name         String    @db.VarChar(255)
  owner_email        String    @db.VarChar(255)
  owner_phone        String    @db.VarChar(255)
  owner_cpf          String    @db.VarChar(14)
  url_trade          String    @db.VarChar(255)
  url_sell           String    @db.VarChar(255)
  agreed_with_emails Boolean?  @default(false)
  agreed_with_terms  Boolean?  @default(false)
  createdAt          DateTime  @default(now())
  updatedAt          DateTime?
  deletedAt          DateTime?
  Perfil             Perfil[]
}

model Perfil {
  id                 String         @id @default(uuid()) @db.VarChar(36)
  owner_id           String         @unique @db.VarChar(255)
  owner_name         String         @db.VarChar(255)
  owner_type         String         @default("Usuario") @db.VarChar(255)
  owner_country      String?        @db.VarChar(5)
  stripe_id          String?        @db.VarChar(255)
  account_status     String         @default("Ativo") @db.VarChar(20)
  status_member      String?        @default("Membro novo") @db.VarChar(255)
  steam_level        Int            @db.Integer
  steam_url          String         @db.VarChar(255)
  picture            String         @db.VarChar(255)
  delivery_time      String?        @default("Sem informações") @db.VarChar(255)
  delivery_fee       Int            @default(0)
  total_exchanges    Int            @default(0) @db.Integer
  createdAt          DateTime       @default(now())
  updatedAt          DateTime?
  deletedAt          DateTime?
  steam_created_date DateTime
  configurationId    String?        @db.VarChar(36)
  cart_id            String?
  configuration      Configuration? @relation(fields: [configurationId], references: [id], onDelete: Cascade)
  cart               Cart?          @relation(fields: [cart_id], references: [id], onDelete: Cascade)
}

model Transaction {
  id             String    @id @default(uuid()) @db.VarChar(36)
  skin_id        String    @db.VarChar(255)
  buyer_id       String    @db.VarChar(255)
  seller_id      String    @db.VarChar(255)
  seller_confirm Boolean   @default(false)
  buyer_confirm  Boolean   @default(false)
  balance        String    @db.VarChar(20)
  status         String?   @default("Em andamento") @db.VarChar(255)
  createdAt      DateTime  @default(now())
  updatedAt      DateTime?
  deletedAt      DateTime?
  skin           Skin?     @relation(fields: [skin_id], references: [id])
}

// model Transaction {
//   id                   String    @id @default(uuid()) @db.VarChar(36)
//   owner_id             String    @unique @db.VarChar(255)
//   status               String    @db.VarChar(255)
//   payment_type         String    @db.VarChar(255)
//   installments         Int       @db.Integer()
//   total                Float
//   transaction_id       String    @db.VarChar(255)
//   processor_response   String    @db.VarChar(255)
//   customer_email       String    @db.VarChar(255)
//   customer_name        String    @db.VarChar(255)
//   customer_mobile      String    @db.VarChar(255)
//   customer_document    String    @db.VarChar(255)
//   billing_address      String    @db.VarChar(255)
//   billing_number       String    @db.VarChar(255)
//   billing_neighborhood String    @db.VarChar(255)
//   billing_city         String    @db.VarChar(255)
//   billing_state        String    @db.VarChar(255)
//   billing_zip_code     String    @db.VarChar(255)
//   createdAt            DateTime  @default(now())
//   updatedAt            DateTime?
//   deletedAt            DateTime?
// }
